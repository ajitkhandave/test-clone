INSERT INTO `reports_details` ( `report_name`, `created_by`, `created_date`, `modified_by`, `modified_date`) VALUES ('ONBOARDING DASHBOARD BY ORDERS TRANSLATED', 'admin', NOW(), 'admin',NOW());

INSERT INTO `reports_query_details` (`report_id`) SELECT report_id from reports_details where report_name = 'ONBOARDING DASHBOARD BY ORDERS TRANSLATED';

update `reports_query_details` set `query_detail`='SELECT a.tranlation_header ,SUM(a.order_count) AS order_count ,SUM(a.printed) AS printed FROM ( SELECT (CASE WHEN LOCATE(''-'',po.client_order_id) > 0 THEN LEFT(po.client_order_id,LOCATE(''-'',po.client_order_id)-1) ELSE po.client_order_id END) AS client_order_id_trans ,COUNT(DISTINCT po.id) AS order_count ,SUM(lic.quantity) AS printed ,COUNT(DISTINCT po.client_order_id) - 1 AS translations ,(CASE WHEN COUNT(DISTINCT po.client_order_id) - 1 = 0 THEN ''Never Translated'' WHEN COUNT(DISTINCT po.client_order_id) - 1 = 1 THEN ''Translated 1 time'' ELSE CONCAT(''Translated '',COUNT(DISTINCT po.client_order_id) - 1,'' times'') END) AS tranlation_header FROM ${schema}.platform_order po JOIN ${schema}.line_item li ON po.id = li.order_id JOIN ${schema}.line_item_component lic ON li.id = lic.line_item_id WHERE po.program_id = 3 AND li.customer_product_id LIKE ''%Welcome%'' AND li.customer_product_id LIKE ''%Configurable%''  AND (SELECT status FROM ${schema}.order_status WHERE id = po.order_status_id) IN (''ORDER_APPROVED'',''FAILED_SENT_TO_PRINTER'',''IN_PROCESS'',''SENT_TO_PRINTER'',''SHIPPED'') GROUP BY (CASE WHEN LOCATE(''-'',po.client_order_id) > 0 THEN LEFT(po.client_order_id,LOCATE(''-'',po.client_order_id)-1) ELSE po.client_order_id END) ) a GROUP BY a.tranlation_header' , `datasource` = '${schema}', `created_date` = NOW(), `modified_date` = NOW()
where report_id = (SELECT report_id from reports_details where report_name = 'ONBOARDING DASHBOARD BY ORDERS TRANSLATED')
